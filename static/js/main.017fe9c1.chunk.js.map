{"version":3,"sources":["serviceWorker.js","animations/FadeInDown.js","components/Title/Title.js","animations/FadeInUp.js","components/Step/Step.js","components/StepList/StepList.js","components/Footer/Footer.js","containers/App.js","containers/nouns.js","containers/verbs.js","index.js"],"names":["Boolean","window","location","hostname","match","fadeInAnimation","keyframes","_templateObject","FadeInDown","styled","div","_templateObject2","props","duration","delay","howToStyle","fontFamily","backgroundColor","color","vnStyle","fontSize","Title","_this","this","react_default","a","createElement","style","marginBottom","className","animations_FadeInDown","onClick","e","updateInfo","cursor","verb","connector","noun","React","Component","FadeInUp_templateObject","FadeInUp","FadeInUp_templateObject2","Container","Step_templateObject","Number","h2","Step_templateObject2","Description","_templateObject3","HiddenSpan","span","_templateObject4","Step","animations_FadeInUp","Step_Number","number","description","target","href","replace","StepList","_ref","steps","durationCount","Object","entries","map","step","components_Step_Step","key","borderBottom","Footer_templateObject","Footer","Footer_Container","nouns","verbs","connectors","unirest","require","App_templateObject","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","nounIndex","verbIndex","connectorIndex","1","newVerbNoun","bind","assertThisInitialized","fetchSteps","_this2","req","count","Math","floor","random","query","headers","x-rapidapi-host","x-rapidapi-key","end","res","setState","body","length","event","_this$state","App_Container","Title_Title","components_StepList_StepList","components_Footer_Footer","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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Aa,WAAY,MAAO,WAAY,QAAS,SAAU,cAAe,aAAc,aAAc,YAAa,cAAe,WAAY,WAAY,cAAe,YAAa,YAAa,YAAa,UAAW,OAAQ,OAAQ,OAAQ,OAAQ,SAAU,SAAU,UAAW,QAAS,SAAU,SAAU,OAAQ,MAAO,QAAS,UAAW,QAAS,WAAY,MAAO,UAAW,QAAS,MAAO,QAAS,OAAQ,OAAQ,QAAS,YAAa,WAAY,MAAO,QAAS,UAAW,OAAQ,OAAQ,OAAQ,SAAU,UAAW,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,SAAU,OAAQ,OAAQ,UAAW,OAAQ,OAAQ,WAAY,WAAY,SAAU,QAAS,QAAS,QAAS,UAAW,QAAS,UAAW,SAAU,aAAc,QAAS,MAAO,WAAY,cAAe,OAAQ,SAAU,WAAY,YAAa,WAAY,OAAQ,UAAW,OAAQ,SAAU,QAAS,OAAQ,WAAY,QAAS,SAAU,OAAQ,YAAa,WAAY,SAAU,UAAW,OAAQ,UAAW,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,WAAY,WAAY,QAAS,UAAW,UAAW,QAAS,QAAS,QAAS,UAAW,QAAS,MAAO,SAAU,QAAS,OAAQ,OAAQ,WAAY,UAAW,OAAQ,MAAO,QAAS,WAAY,SAAU,MAAO,UAAW,SAAU,UAAW,QAAS,QAAS,UAAW,UAAW,OAAQ,OAAQ,QAAS,YAAa,QAAS,OAAQ,QAAS,QAAS,OAAQ,QAAS,OAAQ,OAAQ,MAAO,WAAY,SAAU,SAAU,OAAQ,OAAQ,aAAc,SAAU,QAAS,SAAU,QAAS,OAAQ,OAAQ,UAAW,OAAQ,SAAU,SAAU,OAAQ,OAAQ,SAAU,OAAQ,MAAO,SAAU,QAAS,YAAa,OAAQ,QAAS,OAAQ,UAAW,QAAS,OAAQ,UAAW,OAAQ,QAAS,WAAY,UAAW,UAAW,WAAY,QAAS,WAAY,OAAQ,OAAQ,UAAW,UAAW,SAAU,WAAY,OAAQ,OAAQ,SAAU,MAAO,UAAW,WAAY,WAAY,OAAQ,MAAO,QAAS,SAAU,SAAU,QAAS,WAAY,SAAU,QAAS,UAAW,OAAQ,SAAU,UAAW,OAAQ,UAAW,OAAQ,OAAQ,QAAS,OAAQ,UAAW,MAAO,aAAc,OAAQ,UAAW,OAAQ,WAAY,WAAY,UAAW,SAAU,SAAU,MAAO,OAAQ,UAAW,UAAW,QAAS,cAAe,QAAS,UAAW,UAAW,SAAU,OA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Q,QAAS,QAAS,QAAS,OAAQ,OAAQ,QAAS,OAAQ,MAAO,OAAQ,OAAQ,UAAW,YAAa,SAAU,QAAS,YAAa,MAAO,QAAS,QAAS,YAAa,SAAU,UAAW,SAAU,SAAU,WAAY,QAAS,SAAU,SAAU,UAAW,UAAW,SAAU,OAAQ,OAAQ,OAAQ,QAAS,SAAU,MAAO,OAAQ,QAAS,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,MAAO,OAAQ,QAAS,QAAS,QAAS,OAAQ,SAAU,OAAQ,SAAU,OAAQ,QAAS,OAAQ,QAAS,QAAS,WAAY,MAAO,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,SAAU,QAAS,OAAQ,OAAQ,QAAS,YAAa,QAAS,QAAS,QAAS,SAAU,OAAQ,SAAU,OAAQ,SAAU,SAAU,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,QAAS,MAAO,MAAO,OAAQ,QAAS,WAAY,SAAU,UAAW,UAAW,UAAW,UAAW,WAAY,YAAa,SAAU,SAAU,SAAU,WAAY,SAAU,WAAY,YAAa,YAAa,YAAa,SAAU,SAAU,WAAY,OAAQ,OAAQ,MAAO,MAAO,OAAQ,OAAQ,QAAS,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,OAAQ,QAAS,SAAU,QAAS,QAAS,UAAW,OAAQ,MAAO,UAAW,OAAQ,OAAQ,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,SAAU,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAU,UAAW,SAAU,OAAQ,WAAY,OAAQ,UAAW,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,QAAS,OAAQ,SAAU,MAAO,WAAY,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,SAAU,SAAU,OAAQ,SAAU,UAAW,SAAU,QAAS,SAAU,QAAS,OAAQ,QAAS,WAAY,MAAO,MAAO,OAAQ,SAAU,QAAS,OAAQ,OAAQ,OAAQ,QAAS,MAAO,QAAS,OAAQ,QAAS,OAAQ,OAAQ,UAAW,SAAU,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,SAAU,OAAQ,QAAS,OAAQ,SAAU,MAAO,UAAW,OAAQ,OAAQ,WAAY,OAAQ,SAAU,UAAW,SAAU,UAAW,UAAW,WAAY,QAAS,UAAW,UAAW,QAAS,QAAS,UAAW,UAAW,UAAW,UAAW,UAAW,OAAQ,OAAQ,QAAS,WAAY,SAAU,OAAQ,WAAY,QAAS,OAAQ,UAAW,OAAQ,QAAS,QAAS,UAAW,UAAW,YAAa,SAAU,SAAU,UAAW,SAAU,SAAU,QAAS,SAAU,UAAW,QAAS,UAAW,OAAQ,SAAU,WAAY,SAAU,SAAU,SAAU,SAAU,UAAW,QAAS,SAAU,YAAa,UAAW,SAAU,SAAU,SAAU,QAAS,QAAS,OAAQ,MAAO,OAAQ,OAAQ,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,OAAQ,MAAO,QAAS,UAAW,QAAS,SAAU,SAAU,UAAW,SAAU,QAAS,WAAY,QAAS,OAAQ,SAAU,WAAY,QAAS,SAAU,QAAS,QAAS,QAAS,UAAW,SAAU,QAAS,OAAQ,QAAS,OAAQ,OAAQ,SAAU,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,QAAS,SAAU,SAAU,QAAS,QAAS,OAAQ,OAAQ,SAAU,QAAS,QAAS,QAAS,UAAW,QAAS,QAAS,QAAS,OAAQ,QAAS,SAAU,SAAU,SAAU,SAAU,UAAW,QAAS,QAAS,QAAS,QAAS,OAAQ,QAAS,OAAQ,OAAQ,SAAU,OAAQ,QAAS,QAAS,aAAc,UAAW,QAAS,SAAU,QAAS,WAAY,UAAW,OAAQ,SAAU,UAAW,OAAQ,SAAU,UAAW,UAAW,WAAY,WAAY,UAAW,UAAW,SAAU,OAAQ,OAAQ,MAAO,QAAS,QAAS,YAAa,QAAS,UAAW,OAAQ,QAAS,OAAQ,OAAQ,SAAU,MAAO,OAAQ,MAAO,OAAQ,QAAS,OAAQ,MAAO,QAAS,QAAS,QAAS,YAAa,OAAQ,SAAU,QAAS,UAAW,QAAS,OAAQ,OAAQ,UAAW,QAAS,MAAO,MAAO,SAAU,OAAQ,QAAS,OAAQ,UAAW,WAAY,QAAS,SAAU,SAAU,SAAU,MAAO,SAAU,QAAS,OAAQ,OAAQ,OAAQ,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,OAAQ,QAAS,UAAW,QAAS,OAAQ,QAAS,UAAW,UAAW,OAAQ,OAAQ,OAAQ,SAAU,SAAU,OAAQ,QAAS,OAAQ,QAAS,UAAW,UAAW,QAAS,OAAQ,OAAQ,MAAO,QFUpvLC,EAAa,CAAC,UAAU,WAAY,KAAM,WAAY,QAAS,MAAO,SAAS,OAAQ,gBAAiB,gBAAiB,iBAAkB,eAAgB,iBAAkB,gBAAiB,aAAc,kBAAmB,cAAe,aAAc,aAAc,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAEpWC,EAAUC,EAAQ,KAElBpC,EAAYlC,IAAOC,IAAVsE,KAOMC,cAEpB,SAAAA,EAAYrE,GAAO,IAAAU,EAAA,OAAA2C,OAAAiB,EAAA,EAAAjB,CAAA1C,KAAA0D,IAClB3D,EAAA2C,OAAAkB,EAAA,EAAAlB,CAAA1C,KAAA0C,OAAAmB,EAAA,EAAAnB,CAAAgB,GAAAI,KAAA9D,KAAMX,KACD0E,MAAM,CACVC,UAAW,EACXC,UAAW,EACXC,eAAgB,EAChB1B,MAAO,CAAC2B,EAAG,SAEZpE,EAAKqE,YAAcrE,EAAKqE,YAAYC,KAAjB3B,OAAA4B,EAAA,EAAA5B,CAAA3C,IACnBA,EAAKwE,WAAaxE,EAAKwE,WAAWF,KAAhB3B,OAAA4B,EAAA,EAAA5B,CAAA3C,IAClBA,EAAKW,WAAaX,EAAKW,WAAW2D,KAAhB3B,OAAA4B,EAAA,EAAA5B,CAAA3C,IAVAA,4EAaP,IAAAyE,EAAAxE,KACLyE,EAAMlB,EAAQ,MAAO,oDACrBmB,EAAQC,KAAKC,MAAoB,EAAdD,KAAKE,SAAY,GAC1CJ,EAAIK,MAAM,CACTJ,MAASA,IAGVD,EAAIM,QAAQ,CACXC,kBAAmB,qCACnBC,iBAAkB,uDAGnBR,EAAIS,IAAI,SAACC,GACRX,EAAKY,SAAS,CAAC5C,MAAO2C,EAAIE,+CAK3BrF,KAAKoF,SAAS,CAACpB,UAAWW,KAAKC,MAAMD,KAAKE,SAASzB,EAAMkC,UACzDtF,KAAKoF,SAAS,CAACnB,UAAWU,KAAKC,MAAMD,KAAKE,SAASxB,EAAMiC,UACzDtF,KAAKoF,SAAS,CAAClB,eAAgBS,KAAKC,MAAMD,KAAKE,SAASvB,EAAWgC,6CAGzDC,GACVvF,KAAKoF,SAAS,CAAC5C,MAAO,KACtBxC,KAAKoE,cACLpE,KAAKuE,0DAILvE,KAAKU,8CAIG,IAAA8E,EAC+CxF,KAAK+D,MAApDC,EADAwB,EACAxB,UAAWC,EADXuB,EACWvB,UAAWC,EADtBsB,EACsBtB,eAAgB1B,EADtCgD,EACsChD,MAC9C,OACCvC,EAAAC,EAAAC,cAACsF,EAAD,KACCxF,EAAAC,EAAAC,cAACuF,EAAD,CAAOhF,WAAYV,KAAKU,WAAYE,KAAMyC,EAAMY,GAAYpD,UAAWyC,EAAWY,GAAiBpD,KAAMsC,EAAMY,KAC/G/D,EAAAC,EAAAC,cAACwF,EAAD,CAAUnD,MAAOA,EAAOlD,SAAU,GAAKC,MAAO,KAC9CU,EAAAC,EAAAC,cAACyF,EAAD,CAAQtF,UAAU,qBAvDWS,IAAMC,WGfvC6E,IAASC,OAAO7F,EAAAC,EAAAC,cAAC4F,EAAD,MAASC,SAASC,eAAe,SVyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.017fe9c1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled, {keyframes} from 'styled-components';\r\n\r\nconst fadeInAnimation = keyframes`\r\n\t0%{\r\n\t\topacity: 0;\r\n\t\ttransform: translate(0, 30%);\r\n\t}\r\n\t100% {\r\n\t\topacity: 1;\r\n\t\ttransform: translate(0,0);\r\n\t}\r\n`;\r\n\r\nconst FadeInDown = styled.div`\r\n\tdisplay: inline-block;\r\n\tanimation: ${fadeInAnimation} ${props => props.duration}s ease-in;\r\n\tanimation-delay: ${props => props.delay ? props.delay : 0}s;\r\n`\r\n\r\nexport default FadeInDown;","import React from 'react';\r\nimport FadeIn from '../../animations/FadeInDown';\r\n\r\nconst howToStyle = {\r\n\tfontFamily: 'verdana',\r\n\tbackgroundColor: '#93B874',\r\n\tcolor: '#475347'\r\n}\r\n\r\nconst vnStyle = {\r\n\tbackgroundColor: '#475347',\r\n\tcolor: 'white',\r\n\tfontSize: '2em'\r\n}\r\n\r\nexport default class Title extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{marginBottom: \"1%\"}}>\r\n\t\t\t\t<div className=\"flex justify-center\" style={howToStyle}>\r\n\t\t\t\t\t<h1 className=\"di mt0 mb0\">How to...</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"shadow-3 flex justify-center content-center tc\" style={vnStyle}>\r\n\t\t\t\t\t<FadeIn duration={0.5}>\r\n\t\t\t\t\t\t<h1  onClick={ e => this.props.updateInfo(e)} className=\"mt0 mb0 ttc pb3 grow\" style={{cursor: \"pointer\"}}>{this.props.verb} {this.props.connector} {this.props.noun} </h1>\r\n\t\t\t\t\t</FadeIn>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import styled, {keyframes} from 'styled-components';\r\n\r\nconst fadeInAnimation = keyframes`\r\n\t0%{\r\n\t\topacity: 0;\r\n\t\ttransform: translate(0, -30%);\r\n\t}\r\n\t100% {\r\n\t\topacity: 1;\r\n\t\ttransform: translate(0,0);\r\n\t}\r\n`;\r\n\r\nconst FadeInUp = styled.div`\r\n\twidth: 100%\r\n\tdisplay: inline-block;\r\n\tanimation: ${fadeInAnimation} ${props => props.duration}s ease forwards;\r\n\tanimation-delay: ${props => props.delay ? props.delay : 0}s;\r\n\topacity: 0;\r\n`\r\n\r\nexport default FadeInUp;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport FadeInUp from '../../animations/FadeInUp';\r\n\r\n\r\nconst Container = styled.div`\r\n\tmargin-left: 5%;\r\n\tmargin-right: 5%\r\n\twidth: auto\r\n\tmargin-top: 3vh\r\n\tbackground-color: white;\r\n\tborder-radius: 0.5em;\r\n\tpadding: 1% 3%;\t\r\n`;\r\n\r\nconst Number = styled.h2`\r\n\tdisplay: inline;\r\n\tfont-size: 4em;\r\n\tcolor: #545454;\r\n\theight:10;\r\n\tmargin:0;\r\n`;\r\n\r\nconst Description = styled.div`\r\n\tdisplay: inline;\r\n\tfont-size: 2em;\r\n\tfont-family: helvetica, arial, sans-serif;\r\n\tmargin-left: 20px\r\n\r\n\t&:hover .hidden {\r\n\t\tvisibility: visible;\r\n\t}\r\n`;\r\n\r\nconst HiddenSpan = styled.span`\r\n\tvisibility: hidden;\r\n`\r\n\r\n\r\nconst Step = (props) => {\r\n  return (\r\n  \t<FadeInUp duration={props.duration} delay={props.delay}>\r\n\t    <Container className=\"shadow-1 flex items-center grow\">\r\n\t    \t<Number>{props.number}</Number>\r\n\t    \t<Description>{props.description}\r\n\t    \t\t<HiddenSpan className=\"hidden\"><a target=\"_blank\" href={\"http://www.google.com/search?q=\"+props.description.replace(\" \", \"+\")}>Click to google</a></HiddenSpan>\r\n\t    \t</Description>\r\n\t    </Container>\r\n    </FadeInUp>\r\n  )\r\n}\r\n\r\nexport default Step;","import React from 'react';\r\nimport Step from '../Step/Step';\r\n\r\nconst style = {\r\n\tmarginBottom: \"4%\"\r\n}\r\n\r\nconst StepList = ({steps,duration,delay}) => {\r\n\tlet durationCount = -1;\r\n  return (\r\n    <div style={style}>\r\n    \t{\r\n    \t\t//Duration is the time for each step to transition. This will stagger the transitions.\r\n    \t\tObject.entries(steps).map(step =>{\r\n    \t\t\tdurationCount += 1;\r\n    \t\t\treturn(\r\n    \t\t\t\t<Step key={durationCount} number={step[0]} description={step[1]} duration={duration} delay={delay+(duration*durationCount)}/>\r\n    \t\t\t);\r\n    \t\t})\r\n    \t}\r\n    \t<br style={{borderBottom:\"1px solid\"}}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StepList;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n\tdisplay:flex;\r\n\tflex-direction: row;\r\n\tbackground-color: #93B874;\r\n\tcolor: #545454;\r\n\tpadding: 10px;\r\n\tjustify-content: center;\r\n\tfont-weight: 700;\r\n\tposition:absolute;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\twidth: 100%\r\n`;\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n  \t<Container>\r\n  \t\tThis site is not giving advice, none of the words above are serious or intended to be acted out, as that may be unsafe, they are specifically for the purpose of reading for humour.\r\n  \t</Container>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Title from '../components/Title/Title';\r\nimport StepList from '../components/StepList/StepList';\r\nimport Footer from '../components/Footer/Footer';\r\n\r\nimport nounsObj from './nouns.js';\r\nimport verbsObj from './verbs.js';\r\n\r\nconst nouns = nounsObj.nouns;\r\nconst verbs = verbsObj.verbs;\r\nconst connectors = [\"for the\",\"for your\", \"an\", \"your new\", \"a new\", \"the\", \"at the\",\"your\", \"your mother's\", \"your father's\", \"your teacher's\", \"your crush's\", \"your brother's\", \"your sister's\", \"your son's\", \"your daughter's\", \"your boss's\", \"your dog's\", \"your cat's\", \"your\", \"your\", \"your\", \"your\", \"your\", \"your\", \"the\", \"the\", \"the\", \"the\", \"the\", \"the\", \"the\"];\r\n\r\nconst unirest = require(\"unirest\");\r\n\r\nconst Container = styled.div`\r\n\tdisplay:flex;\r\n\tflex-direction: column;\r\n\tmin-height: 100vh;\r\n\tposition:relative;\r\n`;\r\n\r\nexport default class App extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tnounIndex: 0,\r\n\t\t\tverbIndex: 0,\r\n\t\t\tconnectorIndex: 0,\r\n\t\t\tsteps: {1: \"None\"},\r\n\t\t}\r\n\t\tthis.newVerbNoun = this.newVerbNoun.bind(this);\r\n\t\tthis.fetchSteps = this.fetchSteps.bind(this);\r\n\t\tthis.updateInfo = this.updateInfo.bind(this);\r\n\t}\r\n\r\n\tfetchSteps(){\r\n\t\tconst req = unirest(\"GET\", \"https://hargrimm-wikihow-v1.p.rapidapi.com/steps\");\r\n\t\tconst count = Math.floor(Math.random()*8 +1);\r\n\t\treq.query({\r\n\t\t\t\"count\": count\r\n\t\t});\r\n\r\n\t\treq.headers({\r\n\t\t\t\"x-rapidapi-host\": \"hargrimm-wikihow-v1.p.rapidapi.com\",\r\n\t\t\t\"x-rapidapi-key\": \"2eee6e920amsh740fbb2e0b2b14fp1a51d8jsn18057bec2130\"\r\n\t\t});\r\n\r\n\t\treq.end((res)=>{\r\n\t\t\tthis.setState({steps: res.body});\r\n\t\t});\r\n\t}\r\n\r\n\tnewVerbNoun(){\r\n\t\tthis.setState({nounIndex: Math.floor(Math.random()*nouns.length)});\r\n\t\tthis.setState({verbIndex: Math.floor(Math.random()*verbs.length)});\r\n\t\tthis.setState({connectorIndex: Math.floor(Math.random()*connectors.length)});\r\n\t}\r\n\r\n\tupdateInfo(event){\r\n\t\tthis.setState({steps: {}});\r\n\t\tthis.newVerbNoun();\r\n\t\tthis.fetchSteps();\r\n\t}\r\n\r\n\tcomponentWillMount(){\r\n\t\tthis.updateInfo();\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { nounIndex, verbIndex, connectorIndex, steps} = this.state;\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Title updateInfo={this.updateInfo} verb={verbs[verbIndex]} connector={connectors[connectorIndex]} noun={nouns[nounIndex]}/>\r\n\t\t\t\t<StepList steps={steps} duration={0.3} delay={0.8}/>\r\n\t\t\t\t<Footer className=\"self-end\"/>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n","export default{\r\n\t\"nouns\": [\r\n\t\t\"accelerator\", \"accordion\", \"account\", \"accountant\", \"acknowledgment\", \"acoustic\", \"acrylic\", \"act\", \"action\", \"active\", \"activity\", \"actor\", \"actress\", \"adapter\", \"addition\", \"address\", \"adjustment\", \"adult\", \"advantage\", \"advertisement\", \"advice\", \"afghanistan\", \"africa\", \"aftermath\", \"afternoon\", \"aftershave\", \"afterthought\", \"age\", \"agenda\", \"agreement\", \"air\", \"airbus\", \"airmail\", \"airplane\", \"airport\", \"airship\", \"alarm\", \"albatross\", \"alcohol\", \"algebra\", \"algeria\", \"alibi\", \"alley\", \"alligator\", \"alloy\", \"almanac\", \"alphabet\", \"alto\", \"aluminium\", \"aluminum\", \"ambulance\", \"america\", \"amount\", \"amusement\", \"anatomy\", \"anethesiologist\", \"anger\", \"angle\", \"angora\", \"animal\", \"anime\", \"ankle\", \"answer\", \"ant\", \"antarctica\", \"anteater\", \"antelope\", \"anthony\", \"anthropology\", \"apartment\", \"apology\", \"apparatus\", \"apparel\", \"appeal\", \"appendix\", \"apple\", \"appliance\", \"approval\", \"april\", \"aquarius\", \"arch\", \"archaeology\", \"archeology\", \"archer\", \"architecture\", \"area\", \"argentina\", \"argument\", \"aries\", \"arithmetic\", \"arm\", \"armadillo\", \"armchair\", \"armenian\", \"army\", \"arrow\", \"art\", \"ash\", \"ashtray\", \"asia\", \"asparagus\", \"asphalt\", \"asterisk\", \"astronomy\", \"athlete\", \"atm\", \"atom\", \"attack\", \"attempt\", \"attention\", \"attic\", \"attraction\", \"august\", \"aunt\", \"australia\", \"australian\", \"author\", \"authorisation\", \"authority\", \"authorization\", \"avenue\", \"babies\", \"baboon\", \"baby\", \"back\", \"backbone\", \"bacon\", \"badge\", \"badger\", \"bag\", \"bagel\", \"bagpipe\", \"bail\", \"bait\", \"baker\", \"bakery\", \"balance\", \"balinese\", \"ball\", \"balloon\", \"bamboo\", \"banana\", \"band\", \"bandana\", \"bangladesh\", \"bangle\", \"banjo\", \"bank\", \"bankbook\", \"banker\", \"bar\", \"barbara\", \"barber\", \"barge\", \"baritone\", \"barometer\", \"base\", \"baseball\", \"basement\", \"basin\", \"basket\", \"basketball\", \"bass\", \"bassoon\", \"bat\", \"bath\", \"bathroom\", \"bathtub\", \"battery\", \"battle\", \"bay\", \"beach\", \"bead\", \"beam\", \"bean\", \"bear\", \"beard\", \"beast\", \"beat\", \"beautician\", \"beauty\", \"beaver\", \"bed\", \"bedroom\", \"bee\", \"beech\", \"beef\", \"beer\", \"beet\", \"beetle\", \"beggar\", \"beginner\", \"begonia\", \"behavior\", \"belgian\", \"belief\", \"believe\", \"bell\", \"belt\", \"bench\", \"bengal\", \"beret\", \"berry\", \"bestseller\", \"betty\", \"bibliography\", \"bicycle\", \"bike\", \"bill\", \"billboard\", \"biology\", \"biplane\", \"birch\", \"bird\", \"birth\", \"birthday\", \"bit\", \"bite\", \"black\", \"bladder\", \"blade\", \"blanket\", \"blinker\", \"blizzard\", \"block\", \"blood\", \"blouse\", \"blow\", \"blowgun\", \"blue\", \"board\", \"boat\", \"bobcat\", \"body\", \"bolt\", \"bomb\", \"bomber\", \"bone\", \"bongo\", \"bonsai\", \"book\", \"bookcase\", \"booklet\", \"boot\", \"border\", \"botany\", \"bottle\", \"bottom\", \"boundary\", \"bow\", \"bowl\", \"bowling\", \"box\", \"boy\", \"bra\", \"brace\", \"bracket\", \"brain\", \"brake\", \"branch\", \"brand\", \"brandy\", \"brass\", \"brazil\", \"bread\", \"break\", \"breakfast\", \"breath\", \"brian\", \"brick\", \"bridge\", \"british\", \"broccoli\", \"brochure\", \"broker\", \"bronze\", \"brother\", \"brother-in-law\", \"brow\", \"brown\", \"brush\", \"bubble\", \"bucket\", \"budget\", \"buffer\", \"buffet\", \"bugle\", \"building\", \"bulb\", \"bull\", \"bulldozer\", \"bumper\", \"bun\", \"burglar\", \"burma\", \"burn\", \"burst\", \"bus\", \"bush\", \"business\", \"butane\", \"butcher\", \"butter\", \"button\", \"buzzard\", \"c-clamp\", \"cabbage\", \"cabinet\", \"cable\", \"cactus\", \"cafe\", \"cake\", \"calculator\", \"calculus\", \"calendar\", \"calf\", \"call\", \"camel\", \"camera\", \"camp\", \"can\", \"canada\", \"canadian\", \"cancer\", \"candle\", \"cannon\", \"canoe\", \"canvas\", \"cap\", \"capital\", \"cappelletti\", \"capricorn\", \"captain\", \"caption\", \"car\", \"caravan\", \"carbon\", \"card\", \"cardboard\", \"cardigan\", \"care\", \"carnation\", \"carol\", \"carp\", \"carpenter\", \"carriage\", \"carrot\", \"cart\", \"cartoon\", \"case\", \"cast\", \"castanet\", \"cat\", \"catamaran\", \"caterpillar\", \"cathedral\", \"catsup\", \"cattle\", \"cauliflower\", \"cause\", \"caution\", \"cave\", \"cd\", \"ceiling\", \"celery\", \"celeste\", \"cell\", \"cellar\", \"cello\", \"celsius\", \"cement\", \"cemetery\", \"cent\", \"centimeter\", \"century\", \"ceramic\", \"cereal\", \"certification\", \"chain\", \"chair\", \"chalk\", \"chance\", \"change\", \"channel\", \"character\", \"chard\", \"charles\", \"chauffeur\", \"check\", \"cheek\", \"cheese\", \"cheetah\", \"chef\", \"chemistry\", \"cheque\", \"cherries\", \"cherry\", \"chess\", \"chest\", \"chick\", \"chicken\", \"chicory\", \"chief\", \"child\", \"children\", \"chill\", \"chime\", \"chimpanzee\", \"chin\", \"china\", \"chinese\", \"chive\", \"chocolate\", \"chord\", \"christmas\", \"christopher\", \"chronometer\", \"church\", \"cicada\", \"cinema\", \"circle\", \"circulation\", \"cirrus\", \"citizenship\", \"city\", \"clam\", \"clarinet\", \"class\", \"claus\", \"clave\", \"clef\", \"clerk\", \"click\", \"client\", \"climb\", \"clipper\", \"cloakroom\", \"clock\", \"close\", \"closet\", \"cloth\", \"cloud\", \"cloudy\", \"clover\", \"club\", \"clutch\", \"coach\", \"coal\", \"coast\", \"coat\", \"cobweb\", \"cockroach\", \"cocktail\", \"cocoa\", \"cod\", \"coffee\", \"coil\", \"coin\", \"coke\", \"cold\", \"collar\", \"college\", \"collision\", \"colombia\", \"colon\", \"colony\", \"color\", \"colt\", \"column\", \"columnist\", \"comb\", \"comfort\", \"comic\", \"comma\", \"command\", \"commission\", \"committee\", \"community\", \"company\", \"comparison\", \"competition\", \"competitor\", \"composer\", \"composition\", \"computer\", \"condition\", \"condor\", \"cone\", \"confirmation\", \"conga\", \"congo\", \"conifer\", \"connection\", \"consonant\", \"continent\", \"control\", \"cook\", \"cooking\", \"copper\", \"copy\", \"copyright\", \"cord\", \"cork\", \"cormorant\", \"corn\", \"cornet\", \"correspondent\", \"cost\", \"cotton\", \"couch\", \"cougar\", \"cough\", \"country\", \"course\", \"court\", \"cousin\", \"cover\", \"cow\", \"cowbell\", \"crab\", \"crack\", \"cracker\", \"craftsman\", \"crate\", \"crawdad\", \"crayfish\", \"crayon\", \"cream\", \"creator\", \"creature\", \"credit\", \"creditor\", \"creek\", \"crib\", \"cricket\", \"crime\", \"criminal\", \"crocodile\", \"crocus\", \"croissant\", \"crook\", \"crop\", \"cross\", \"crow\", \"crowd\", \"crown\", \"crush\", \"cry\", \"cub\", \"cuban\", \"cucumber\", \"cultivator\", \"cup\", \"cupboard\", \"cupcake\", \"curler\", \"currency\", \"current\", \"curtain\", \"curve\", \"cushion\", \"custard\", \"customer\", \"cut\", \"cuticle\", \"cycle\", \"cyclone\", \"cylinder\", \"cymbal\", \"dad\", \"daffodil\", \"dahlia\", \"daisy\", \"damage\", \"dance\", \"dancer\", \"danger\", \"daniel\", \"dash\", \"dashboard\", \"database\", \"date\", \"daughter\", \"david\", \"day\", \"dead\", \"deadline\", \"deal\", \"death\", \"deborah\", \"debt\", \"debtor\", \"decade\", \"december\", \"decimal\", \"decision\", \"decrease\", \"dedication\", \"deer\", \"defense\", \"deficit\", \"degree\", \"delete\", \"delivery\", \"den\", \"denim\", \"dentist\", \"deodorant\", \"department\", \"deposit\", \"description\", \"desert\", \"design\", \"desire\", \"desk\", \"dessert\", \"destruction\", \"detail\", \"detective\", \"development\", \"dew\", \"diamond\", \"diaphragm\", \"dibble\", \"dictionary\", \"dietician\", \"difference\", \"digestion\", \"digger\", \"digital\", \"dill\", \"dime\", \"dimple\", \"dinghy\", \"dinner\", \"dinosaur\", \"diploma\", \"dipstick\", \"direction\", \"dirt\", \"disadvantage\", \"discovery\", \"discussion\", \"disease\", \"disgust\", \"dish\", \"distance\", \"distribution\", \"distributor\", \"diving\", \"division\", \"divorced\", \"dock\", \"doctor\", \"dog\", \"dogsled\", \"doll\", \"dollar\", \"dolphin\", \"domain\", \"donald\", \"donkey\", \"donna\", \"door\", \"dorothy\", \"double\", \"doubt\", \"downtown\", \"dragon\", \"dragonfly\", \"drain\", \"drake\", \"drama\", \"draw\", \"drawbridge\", \"drawer\", \"dream\", \"dredger\", \"dress\", \"dresser\", \"dressing\", \"drill\", \"drink\", \"drive\", \"driver\", \"driving\", \"drizzle\", \"drop\", \"drug\", \"drum\", \"dry\", \"dryer\", \"duck\", \"duckling\", \"dugout\", \"dungeon\", \"dust\", \"eagle\", \"ear\", \"earth\", \"earthquake\", \"ease\", \"east\", \"edge\", \"edger\", \"editor\", \"editorial\", \"education\", \"edward\", \"eel\", \"effect\", \"egg\", \"eggnog\", \"eggplant\", \"egypt\", \"eight\", \"elbow\", \"element\", \"elephant\", \"elizabeth\", \"ellipse\", \"emery\", \"employee\", \"employer\", \"encyclopedia\", \"end\", \"enemy\", \"energy\", \"engine\", \"engineer\", \"engineering\", \"english\", \"enquiry\", \"entrance\", \"environment\", \"epoch\", \"epoxy\", \"equinox\", \"equipment\", \"era\", \"error\", \"estimate\", \"ethernet\", \"ethiopia\", \"euphonium\", \"europe\", \"evening\", \"event\", \"ex-husband\", \"ex-wife\", \"examination\", \"example\", \"exchange\", \"exclamation\", \"exhaust\", \"existence\", \"expansion\", \"experience\", \"expert\", \"explanation\", \"eye\", \"eyebrow\", \"eyelash\", \"eyeliner\", \"face\", \"facilities\", \"fact\", \"factory\", \"fahrenheit\", \"fairies\", \"fall\", \"family\", \"fan\", \"fang\", \"farm\", \"farmer\", \"fat\", \"father\", \"father-in-law\", \"faucet\", \"fear\", \"feast\", \"feather\", \"feature\", \"february\", \"fedelini\", \"feedback\", \"feeling\", \"feet\", \"felony\", \"female\", \"fender\", \"ferry\", \"ferryboat\", \"fertilizer\", \"fiber\", \"fiberglass\", \"fibre\", \"fiction\", \"field\", \"fifth\", \"fight\", \"fighter\", \"file\", \"find\", \"fine\", \"finger\", \"fir\", \"fire\", \"fired\", \"fireman\", \"fireplace\", \"firewall\", \"fish\", \"fisherman\", \"flag\", \"flame\", \"flare\", \"flat\", \"flavor\", \"flax\", \"flesh\", \"flight\", \"flock\", \"flood\", \"floor\", \"flower\", \"flugelhorn\", \"flute\", \"fly\", \"foam\", \"fog\", \"fold\", \"font\", \"food\", \"foot\", \"football\", \"footnote\", \"force\", \"forecast\", \"forehead\", \"forest\", \"forgery\", \"fork\", \"form\", \"format\", \"fortnight\", \"foundation\", \"fountain\", \"fowl\", \"fox\", \"foxglove\", \"fragrance\", \"frame\", \"france\", \"freckle\", \"freeze\", \"freezer\", \"freighter\", \"french\", \"freon\", \"friction\", \"friday\", \"fridge\", \"friend\", \"frog\", \"front\", \"frost\", \"frown\", \"fruit\", \"fuel\", \"fur\", \"furniture\", \"galley\", \"gallon\", \"game\", \"gander\", \"garage\", \"garden\", \"garlic\", \"gas\", \"gasoline\", \"gate\", \"gateway\", \"gauge\", \"gazelle\", \"gear\", \"gearshift\", \"geese\", \"gemini\", \"gender\", \"geography\", \"geology\", \"geometry\", \"george\", \"geranium\", \"german\", \"germany\", \"ghana\", \"ghost\", \"giant\", \"giraffe\", \"girdle\", \"girl\", \"gladiolus\", \"glass\", \"glider\", \"gliding\", \"glockenspiel\", \"glove\", \"glue\", \"goal\", \"goat\", \"gold\", \"goldfish\", \"golf\", \"gondola\", \"gong\", \"good-bye\", \"goose\", \"gore-tex\", \"gorilla\", \"gosling\", \"government\", \"governor\", \"grade\", \"grain\", \"gram\", \"granddaughter\", \"grandfather\", \"grandmother\", \"grandson\", \"grape\", \"graphic\", \"grass\", \"grasshopper\", \"gray\", \"grease\", \"great-grandfather\", \"great-grandmother\", \"greece\", \"greek\", \"green\", \"grenade\", \"grey\", \"grill\", \"grip\", \"ground\", \"group\", \"grouse\", \"growth\", \"guarantee\", \"guatemalan\", \"guide\", \"guilty\", \"guitar\", \"gum\", \"gun\", \"gym\", \"gymnast\", \"hacksaw\", \"hail\", \"hair\", \"haircut\", \"half-brother\", \"half-sister\", \"halibut\", \"hall\", \"hallway\", \"hamburger\", \"hammer\", \"hamster\", \"hand\", \"handball\", \"handicap\", \"handle\", \"handsaw\", \"harbor\", \"hardboard\", \"hardcover\", \"hardhat\", \"hardware\", \"harmonica\", \"harmony\", \"harp\", \"hat\", \"hate\", \"hawk\", \"head\", \"headlight\", \"headline\", \"health\", \"hearing\", \"heart\", \"heat\", \"heaven\", \"hedge\", \"height\", \"helen\", \"helicopter\", \"helium\", \"hell\", \"helmet\", \"help\", \"hemp\", \"hen\", \"heron\", \"herring\", \"hexagon\", \"hill\", \"himalayan\", \"hip\", \"hippopotamus\", \"history\", \"hobbies\", \"hockey\", \"hoe\", \"hole\", \"holiday\", \"home\", \"honey\", \"hood\", \"hook\", \"hope\", \"horn\", \"horse\", \"hose\", \"hospital\", \"hot\", \"hour\", \"hourglass\", \"house\", \"hovercraft\", \"hub\", \"hubcap\", \"humidity\", \"humor\", \"hurricane\", \"hyacinth\", \"hydrant\", \"hydrofoil\", \"hydrogen\", \"hyena\", \"hygienic\", \"ice\", \"icebreaker\", \"icicle\", \"icon\", \"idea\", \"ikebana\", \"illegal\", \"imprisonment\", \"improvement\", \"impulse\", \"inch\", \"income\", \"increase\", \"index\", \"india\", \"indonesia\", \"industry\", \"ink\", \"innocent\", \"input\", \"insect\", \"instruction\", \"instrument\", \"insulation\", \"insurance\", \"interactive\", \"interest\", \"internet\", \"interviewer\", \"intestine\", \"invention\", \"inventory\", \"invoice\", \"iran\", \"iraq\", \"iris\", \"iron\", \"island\", \"israel\", \"italian\", \"italy\", \"jacket\", \"jaguar\", \"jail\", \"jam\", \"james\", \"january\", \"japan\", \"japanese\", \"jar\", \"jasmine\", \"jason\", \"jaw\", \"jeans\", \"jeep\", \"jeff\", \"jelly\", \"jellyfish\", \"jennifer\", \"jet\", \"jewel\", \"jogging\", \"john\", \"join\", \"joke\", \"joseph\", \"journey\", \"judge\", \"judo\", \"juice\", \"july\", \"jumbo\", \"jump\", \"jumper\", \"june\", \"jury\", \"justice\", \"jute\", \"kale\", \"kamikaze\", \"kangaroo\", \"karate\", \"karen\", \"kayak\", \"kendo\", \"kenneth\", \"kenya\", \"ketchup\", \"kettle\", \"kettledrum\", \"kevin\", \"key\", \"keyboard\", \"keyboarding\", \"kick\", \"kidney\", \"kilogram\", \"kilometer\", \"kimberly\", \"kiss\", \"kitchen\", \"kite\", \"kitten\", \"kitty\", \"knee\", \"knickers\", \"knife\", \"knight\", \"knot\", \"knowledge\", \"kohlrabi\", \"korean\", \"laborer\", \"lace\", \"ladybug\", \"lake\", \"lamb\", \"lamp\", \"lan\", \"land\", \"landmine\", \"language\", \"larch\", \"lasagna\", \"latency\", \"latex\", \"lathe\", \"laugh\", \"laundry\", \"laura\", \"law\", \"lawyer\", \"layer\", \"lead\", \"leaf\", \"learning\", \"leather\", \"leek\", \"leg\", \"legal\", \"lemonade\", \"lentil\", \"leo\", \"leopard\", \"letter\", \"lettuce\", \"level\", \"libra\", \"library\", \"license\", \"lier\", \"lift\", \"light\", \"lightning\", \"lilac\", \"lily\", \"limit\", \"linda\", \"line\", \"linen\", \"link\", \"lion\", \"lip\", \"lipstick\", \"liquid\", \"liquor\", \"lisa\", \"list\", \"literature\", \"litter\", \"liver\", \"lizard\", \"llama\", \"loaf\", \"loan\", \"lobster\", \"lock\", \"locket\", \"locust\", \"look\", \"loss\", \"lotion\", \"love\", \"low\", \"lumber\", \"lunch\", \"lunchroom\", \"lung\", \"lunge\", \"lute\", \"luttuce\", \"lycra\", \"lynx\", \"lyocell\", \"lyre\", \"lyric\", \"macaroni\", \"machine\", \"macrame\", \"magazine\", \"magic\", \"magician\", \"maid\", \"mail\", \"mailbox\", \"mailman\", \"makeup\", \"malaysia\", \"male\", \"mall\", \"mallet\", \"man\", \"manager\", \"mandolin\", \"manicure\", \"manx\", \"map\", \"maple\", \"maraca\", \"marble\", \"march\", \"margaret\", \"margin\", \"maria\", \"marimba\", \"mark\", \"market\", \"married\", \"mary\", \"mascara\", \"mask\", \"mass\", \"match\", \"math\", \"mattock\", \"may\", \"mayonnaise\", \"meal\", \"measure\", \"meat\", \"mechanic\", \"medicine\", \"meeting\", \"melody\", \"memory\", \"men\", \"menu\", \"mercury\", \"message\", \"metal\", \"meteorology\", \"meter\", \"methane\", \"mexican\", \"mexico\", \"mice\", \"michael\", \"michelle\", \"microwave\", \"middle\", \"mile\", \"milk\", \"milkshake\", \"millennium\", \"millimeter\", \"millisecond\", \"mimosa\", \"mind\", \"mine\", \"mini-skirt\", \"minibus\", \"minister\", \"mint\", \"minute\", \"mirror\", \"missile\", \"mist\", \"mistake\", \"mitten\", \"moat\", \"modem\", \"mole\", \"mom\", \"monday\", \"money\", \"monkey\", \"month\", \"moon\", \"morning\", \"morocco\", \"mosque\", \"mosquito\", \"mother\", \"mother-in-law\", \"motion\", \"motorboat\", \"motorcycle\", \"mountain\", \"mouse\", \"moustache\", \"mouth\", \"move\", \"multi-hop\", \"multimedia\", \"muscle\", \"museum\", \"music\", \"musician\", \"mustard\", \"myanmar\", \"nail\", \"name\", \"nancy\", \"napkin\", \"narcissus\", \"nation\", \"neck\", \"need\", \"needle\", \"neon\", \"nepal\", \"nephew\", \"nerve\", \"nest\", \"net\", \"network\", \"news\", \"newsprint\", \"newsstand\", \"nic\", \"nickel\", \"niece\", \"nigeria\", \"night\", \"nitrogen\", \"node\", \"noise\", \"noodle\", \"north\", \"north america\", \"north korea\", \"norwegian\", \"nose\", \"note\", \"notebook\", \"notify\", \"novel\", \"november\", \"number\", \"numeric\", \"nurse\", \"nut\", \"nylon\", \"oak\", \"oatmeal\", \"objective\", \"oboe\", \"observation\", \"occupation\", \"ocean\", \"ocelot\", \"octagon\", \"octave\", \"october\", \"octopus\", \"odometer\", \"offence\", \"offer\", \"office\", \"oil\", \"okra\", \"olive\", \"onion\", \"open\", \"opera\", \"operation\", \"ophthalmologist\", \"opinion\", \"option\", \"orange\", \"orchestra\", \"orchid\", \"order\", \"organ\", \"organisation\", \"organization\", \"ornament\", \"ostrich\", \"otter\", \"ounce\", \"output\", \"outrigger\", \"oval\", \"oven\", \"overcoat\", \"owl\", \"owner\", \"ox\", \"oxygen\", \"oyster\", \"package\", \"packet\", \"page\", \"pail\", \"pain\", \"paint\", \"pair\", \"pajama\", \"pakistan\", \"palm\", \"pamphlet\", \"pan\", \"pancake\", \"pancreas\", \"panda\", \"pansy\", \"panther\", \"panties\", \"pantry\", \"pants\", \"panty\", \"pantyhose\", \"paper\", \"paperback\", \"parade\", \"parallelogram\", \"parcel\", \"parent\", \"parentheses\", \"park\", \"parrot\", \"parsnip\", \"part\", \"particle\", \"partner\", \"partridge\", \"party\", \"passbook\", \"passenger\", \"passive\", \"pasta\", \"paste\", \"pastor\", \"pastry\", \"patch\", \"path\", \"patient\", \"patio\", \"patricia\", \"paul\", \"payment\", \"pea\", \"peace\", \"peak\", \"peanut\", \"pear\", \"pedestrian\", \"pediatrician\", \"peen\", \"peer-to-peer\", \"pelican\", \"pen\", \"penalty\", \"pencil\", \"pendulum\", \"pentagon\", \"peony\", \"pepper\", \"perch\", \"perfume\", \"period\", \"periodical\", \"peripheral\", \"permission\", \"persian\", \"person\", \"peru\", \"pest\", \"pet\", \"pharmacist\", \"pheasant\", \"philippines\", \"philosophy\", \"phone\", \"physician\", \"piano\", \"piccolo\", \"pickle\", \"picture\", \"pie\", \"pig\", \"pigeon\", \"pike\", \"pillow\", \"pilot\", \"pimple\", \"pin\", \"pine\", \"ping\", \"pink\", \"pint\", \"pipe\", \"pisces\", \"pizza\", \"place\", \"plain\", \"plane\", \"planet\", \"plant\", \"plantation\", \"plaster\", \"plasterboard\", \"plastic\", \"plate\", \"platinum\", \"play\", \"playground\", \"playroom\", \"pleasure\", \"plier\", \"plot\", \"plough\", \"plow\", \"plywood\", \"pocket\", \"poet\", \"point\", \"poison\", \"poland\", \"police\", \"policeman\", \"polish\", \"politician\", \"pollution\", \"polo\", \"polyester\", \"pond\", \"popcorn\", \"poppy\", \"population\", \"porch\", \"porcupine\", \"port\", \"porter\", \"position\", \"possibility\", \"postage\", \"postbox\", \"pot\", \"potato\", \"poultry\", \"pound\", \"powder\", \"power\", \"precipitation\", \"preface\", \"prepared\", \"pressure\", \"price\", \"priest\", \"print\", \"printer\", \"prison\", \"probation\", \"process\", \"processing\", \"produce\", \"product\", \"production\", \"professor\", \"profit\", \"promotion\", \"propane\", \"property\", \"prose\", \"prosecution\", \"protest\", \"protocol\", \"pruner\", \"psychiatrist\", \"psychology\", \"ptarmigan\", \"puffin\", \"pull\", \"puma\", \"pump\", \"pumpkin\", \"punch\", \"punishment\", \"puppy\", \"purchase\", \"purple\", \"purpose\", \"push\", \"pvc\", \"pyjama\", \"pyramid\", \"quail\", \"quality\", \"quart\", \"quarter\", \"quartz\", \"queen\", \"question\", \"quicksand\", \"quiet\", \"quill\", \"quilt\", \"quince\", \"quit\", \"quiver\", \"quotation\", \"rabbi\", \"rabbit\", \"racing\", \"radar\", \"radiator\", \"radio\", \"radish\", \"raft\", \"rail\", \"railway\", \"rain\", \"rainbow\", \"raincoat\", \"rainstorm\", \"rake\", \"ramie\", \"random\", \"range\", \"rat\", \"rate\", \"raven\", \"ravioli\", \"ray\", \"rayon\", \"reaction\", \"reading\", \"reason\", \"receipt\", \"recess\", \"record\", \"recorder\", \"rectangle\", \"red\", \"reduction\", \"refrigerator\", \"refund\", \"regret\", \"reindeer\", \"relation\", \"relative\", \"religion\", \"relish\", \"reminder\", \"repair\", \"replace\", \"report\", \"representative\", \"request\", \"resolution\", \"respect\", \"responsibility\", \"rest\", \"restaurant\", \"result\", \"retailer\", \"revolve\", \"revolver\", \"reward\", \"rhinoceros\", \"rhythm\", \"rice\", \"richard\", \"riddle\", \"rifle\", \"ring\", \"rise\", \"risk\", \"river\", \"riverbed\", \"road\", \"roadway\", \"roast\", \"robert\", \"robin\", \"rock\", \"rocket\", \"rod\", \"roll\", \"romania\", \"romanian\", \"ronald\", \"roof\", \"room\", \"rooster\", \"root\", \"rose\", \"rotate\", \"route\", \"router\", \"rowboat\", \"rub\", \"rubber\", \"rugby\", \"rule\", \"run\", \"russia\", \"russian\", \"rutabaga\", \"ruth\", \"sack\", \"sagittarius\", \"sail\", \"sailboat\", \"sailor\", \"salad\", \"salary\", \"sale\", \"salesman\", \"salmon\", \"salt\", \"sampan\", \"samurai\", \"sand\", \"sandra\", \"sandwich\", \"santa\", \"sarah\", \"sardine\", \"satin\", \"saturday\", \"sauce\", \"saudi arabia\", \"sausage\", \"save\", \"saw\", \"saxophone\", \"scale\", \"scallion\", \"scanner\", \"scarecrow\", \"scarf\", \"scene\", \"scent\", \"schedule\", \"school\", \"science\", \"scissors\", \"scooter\", \"scorpio\", \"scorpion\", \"scraper\", \"screen\", \"screw\", \"screwdriver\", \"sea\", \"seagull\", \"seal\", \"seaplane\", \"search\", \"seashore\", \"season\", \"seat\", \"second\", \"secretary\", \"secure\", \"security\", \"seed\", \"seeder\", \"segment\", \"select\", \"selection\", \"self\", \"semicircle\", \"semicolon\", \"sense\", \"sentence\", \"separated\", \"september\", \"servant\", \"server\", \"session\", \"sex\", \"shade\", \"shadow\", \"shake\", \"shallot\", \"shame\", \"shampoo\", \"shape\", \"share\", \"shark\", \"sharon\", \"shears\", \"sheep\", \"sheet\", \"shelf\", \"shell\", \"shield\", \"shingle\", \"ship\", \"shirt\", \"shock\", \"shoe\", \"shoemaker\", \"shop\", \"shorts\", \"shoulder\", \"shovel\", \"show\", \"shrimp\", \"shrine\", \"siamese\", \"siberian\", \"side\", \"sideboard\", \"sidecar\", \"sidewalk\", \"sign\", \"signature\", \"silica\", \"silk\", \"silver\", \"sing\", \"singer\", \"single\", \"sink\", \"sister\", \"sister-in-law\", \"size\", \"skate\", \"skiing\", \"skill\", \"skin\", \"skirt\", \"sky\", \"slash\", \"slave\", \"sled\", \"sleep\", \"sleet\", \"slice\", \"slime\", \"slip\", \"slipper\", \"slope\", \"smash\", \"smell\", \"smile\", \"smoke\", \"snail\", \"snake\", \"sneeze\", \"snow\", \"snowboarding\", \"snowflake\", \"snowman\", \"snowplow\", \"snowstorm\", \"soap\", \"soccer\", \"society\", \"sociology\", \"sock\", \"soda\", \"sofa\", \"softball\", \"softdrink\", \"software\", \"soil\", \"soldier\", \"son\", \"song\", \"soprano\", \"sort\", \"sound\", \"soup\", \"sousaphone\", \"south africa\", \"south america\", \"south korea\", \"soy\", \"soybean\", \"space\", \"spade\", \"spaghetti\", \"spain\", \"spandex\", \"spark\", \"sparrow\", \"spear\", \"specialist\", \"speedboat\", \"sphere\", \"sphynx\", \"spider\", \"spike\", \"spinach\", \"spleen\", \"sponge\", \"spoon\", \"spot\", \"spring\", \"sprout\", \"spruce\", \"spy\", \"square\", \"squash\", \"squid\", \"squirrel\", \"stage\", \"staircase\", \"stamp\", \"star\", \"start\", \"starter\", \"state\", \"statement\", \"station\", \"statistic\", \"steam\", \"steel\", \"stem\", \"step\", \"step-aunt\", \"step-brother\", \"step-daughter\", \"step-father\", \"step-grandfather\", \"step-grandmother\", \"step-mother\", \"step-sister\", \"step-son\", \"step-uncle\", \"stepdaughter\", \"stepmother\", \"stepson\", \"steven\", \"stew\", \"stick\", \"stinger\", \"stitch\", \"stock\", \"stocking\", \"stomach\", \"stone\", \"stool\", \"stop\", \"stopsign\", \"stopwatch\", \"store\", \"storm\", \"story\", \"stove\", \"stranger\", \"straw\", \"stream\", \"street\", \"streetcar\", \"stretch\", \"string\", \"structure\", \"study\", \"sturgeon\", \"submarine\", \"substance\", \"subway\", \"success\", \"sudan\", \"suede\", \"sugar\", \"suggestion\", \"suit\", \"summer\", \"sun\", \"sunday\", \"sundial\", \"sunflower\", \"sunshine\", \"supermarket\", \"supply\", \"support\", \"surfboard\", \"surgeon\", \"surname\", \"surprise\", \"susan\", \"sushi\", \"swallow\", \"swamp\", \"swan\", \"sweater\", \"sweatshirt\", \"sweatshop\", \"swedish\", \"sweets\", \"swim\", \"swimming\", \"swing\", \"swiss\", \"switch\", \"sword\", \"swordfish\", \"sycamore\", \"syria\", \"syrup\", \"system\", \"t-shirt\", \"table\", \"tablecloth\", \"tabletop\", \"tachometer\", \"tadpole\", \"tail\", \"tailor\", \"taiwan\", \"talk\", \"tank\", \"tanker\", \"tanzania\", \"target\", \"taste\", \"taurus\", \"tax\", \"taxi\", \"taxicab\", \"tea\", \"teacher\", \"teaching\", \"team\", \"technician\", \"teeth\", \"television\", \"teller\", \"temper\", \"temperature\", \"temple\", \"tempo\", \"tendency\", \"tennis\", \"tenor\", \"tent\", \"territory\", \"test\", \"text\", \"textbook\", \"texture\", \"thailand\", \"theater\", \"theory\", \"thermometer\", \"thing\", \"thistle\", \"thomas\", \"thought\", \"thread\", \"thrill\", \"throat\", \"throne\", \"thumb\", \"thunder\", \"thunderstorm\", \"thursday\", \"ticket\", \"tie\", \"tiger\", \"tights\", \"tile\", \"timbale\", \"time\", \"timer\", \"timpani\", \"tin\", \"tip\", \"tire\", \"titanium\", \"title\", \"toad\", \"toast\", \"toe\", \"toenail\", \"toilet\", \"tom-tom\", \"tomato\", \"ton\", \"tongue\", \"tooth\", \"toothbrush\", \"toothpaste\", \"top\", \"tornado\", \"tortellini\", \"tortoise\", \"touch\", \"tower\", \"town\", \"toy\", \"tractor\", \"trade\", \"traffic\", \"trail\", \"train\", \"tramp\", \"transaction\", \"transmission\", \"transport\", \"trapezoid\", \"tray\", \"treatment\", \"tree\", \"trial\", \"triangle\", \"trick\", \"trigonometry\", \"trip\", \"trombone\", \"trouble\", \"trousers\", \"trout\", \"trowel\", \"truck\", \"trumpet\", \"trunk\", \"tsunami\", \"tub\", \"tuba\", \"tuesday\", \"tugboat\", \"tulip\", \"tuna\", \"tune\", \"turkey\", \"turkish\", \"turn\", \"turnip\", \"turnover\", \"turret\", \"turtle\", \"tv\", \"twig\", \"twilight\", \"twine\", \"twist\", \"typhoon\", \"tyvek\", \"uganda\", \"ukraine\", \"ukrainian\", \"umbrella\", \"uncle\", \"underclothes\", \"underpants\", \"undershirt\", \"underwear\", \"unit\", \"united kingdom\", \"unshielded\", \"use\", \"utensil\", \"uzbekistan\", \"vacation\", \"vacuum\", \"valley\", \"value\", \"van\", \"var verbs = [aardvark\", \"vase\", \"vault\", \"vegetable\", \"vegetarian\", \"veil\", \"vein\", \"velvet\", \"venezuela\", \"venezuelan\", \"verdict\", \"vermicelli\", \"verse\", \"vessel\", \"vest\", \"veterinarian\", \"vibraphone\", \"vietnam\", \"view\", \"vinyl\", \"viola\", \"violet\", \"violin\", \"virgo\", \"viscose\", \"vise\", \"vision\", \"visitor\", \"voice\", \"volcano\", \"volleyball\", \"voyage\", \"vulture\", \"waiter\", \"waitress\", \"walk\", \"wall\", \"wallaby\", \"wallet\", \"walrus\", \"war\", \"warm\", \"wash\", \"washer\", \"wasp\", \"waste\", \"watch\", \"watchmaker\", \"water\", \"waterfall\", \"wave\", \"wax\", \"way\", \"wealth\", \"weapon\", \"weasel\", \"weather\", \"wedge\", \"wednesday\", \"weed\", \"weeder\", \"week\", \"weight\", \"whale\", \"wheel\", \"whip\", \"whiskey\", \"whistle\", \"white\", \"wholesaler\", \"whorl\", \"wilderness\", \"william\", \"willow\", \"wind\", \"windchime\", \"window\", \"windscreen\", \"windshield\", \"wine\", \"wing\", \"winter\", \"wire\", \"wish\", \"witch\", \"withdrawal\", \"witness\", \"wolf\", \"woman\", \"women\", \"wood\", \"wool\", \"woolen\", \"word\", \"work\", \"workshop\", \"worm\", \"wound\", \"wrecker\", \"wren\", \"wrench\", \"wrinkle\", \"wrist\", \"writer\", \"xylophone\", \"yacht\", \"yak\", \"yam\", \"yard\", \"yarn\", \"year\", \"yellow\", \"yew\", \"yogurt\", \"yoke\", \"yugoslavian\", \"zebra\", \"zephyr\", \"zinc\", \"zipper\", \"zone\", \"zoo\", \"zoology\" \r\n\t]\r\n};","export default {\r\n\t'verbs':[\r\n\t\t\"accept\", \"add\", \"admire\", \"admit\", \"advise\", \"afford\", \"agree\", \"alert\", \"allow\", \"amuse\", \"analyse\", \"announce\", \"annoy\", \"answer\", \"apologise\", \"appear\", \"applaud\", \"appreciate\", \"approve\", \"argue\", \"arrange\", \"arrest\", \"arrive\", \"ask\", \"attach\", \"attack\", \"attempt\", \"attend\", \"attract\", \"avoid\", \"back\", \"bake\", \"balance\", \"ban\", \"bang\", \"bare\", \"bat\", \"bathe\", \"battle\", \"beam\", \"beg\", \"behave\", \"belong\", \"bleach\", \"bless\", \"blind\", \"blink\", \"blot\", \"blush\", \"boast\", \"boil\", \"bolt\", \"bomb\", \"book\", \"bore\", \"borrow\", \"bounce\", \"bow\", \"box\", \"brake\", \"branch\", \"breathe\", \"bruise\", \"brush\", \"bubble\", \"bump\", \"burn\", \"bury\", \"buzz\", \"calculate\", \"call\", \"camp\", \"care\", \"carry\", \"carve\", \"cause\", \"challenge\", \"change\", \"charge\", \"chase\", \"cheat\", \"check\", \"cheer\", \"chew\", \"choke\", \"chop\", \"claim\", \"clap\", \"clean\", \"clear\", \"clip\", \"close\", \"coach\", \"coil\", \"collect\", \"colour\", \"comb\", \"command\", \"communicate\", \"compare\", \"compete\", \"complain\", \"complete\", \"concentrate\", \"concern\", \"confess\", \"confuse\", \"connect\", \"consider\", \"consist\", \"contain\", \"continue\", \"copy\", \"correct\", \"cough\", \"count\", \"cover\", \"crack\", \"crash\", \"crawl\", \"cross\", \"crush\", \"cry\", \"cure\", \"curl\", \"curve\", \"cycle\", \"dam\", \"damage\", \"dance\", \"dare\", \"decay\", \"deceive\", \"decide\", \"decorate\", \"delay\", \"delight\", \"deliver\", \"depend\", \"describe\", \"desert\", \"deserve\", \"destroy\", \"detect\", \"develop\", \"disagree\", \"disappear\", \"disapprove\", \"disarm\", \"discover\", \"dislike\", \"divide\", \"double\", \"doubt\", \"drag\", \"drain\", \"dream\", \"dress\", \"drip\", \"drop\", \"drown\", \"drum\", \"dry\", \"dust\", \"earn\", \"educate\", \"embarrass\", \"employ\", \"empty\", \"encourage\", \"end\", \"enjoy\", \"enter\", \"entertain\", \"escape\", \"examine\", \"excite\", \"excuse\", \"exercise\", \"exist\", \"expand\", \"expect\", \"explain\", \"explode\", \"extend\", \"face\", \"fade\", \"fail\", \"fancy\", \"fasten\", \"fax\", \"fear\", \"fence\", \"fetch\", \"file\", \"fill\", \"film\", \"fire\", \"fit\", \"fix\", \"flap\", \"flash\", \"float\", \"flood\", \"flow\", \"flower\", \"fold\", \"follow\", \"fool\", \"force\", \"form\", \"found\", \"frame\", \"frighten\", \"fry\", \"gather\", \"gaze\", \"glow\", \"glue\", \"grab\", \"grate\", \"grease\", \"greet\", \"grin\", \"grip\", \"groan\", \"guarantee\", \"guard\", \"guess\", \"guide\", \"hammer\", \"hand\", \"handle\", \"hang\", \"happen\", \"harass\", \"harm\", \"hate\", \"haunt\", \"head\", \"heal\", \"heap\", \"heat\", \"help\", \"hook\", \"hop\", \"hope\", \"hover\", \"hug\", \"hum\", \"hunt\", \"hurry\", \"identify\", \"ignore\", \"imagine\", \"impress\", \"improve\", \"include\", \"increase\", \"influence\", \"inform\", \"inject\", \"injure\", \"instruct\", \"intend\", \"interest\", \"interfere\", \"interrupt\", \"introduce\", \"invent\", \"invite\", \"irritate\", \"itch\", \"jail\", \"jam\", \"jog\", \"join\", \"joke\", \"judge\", \"juggle\", \"jump\", \"kick\", \"kill\", \"kiss\", \"kneel\", \"knit\", \"knock\", \"knot\", \"label\", \"land\", \"last\", \"laugh\", \"launch\", \"learn\", \"level\", \"license\", \"lick\", \"lie\", \"lighten\", \"like\", \"list\", \"listen\", \"live\", \"load\", \"lock\", \"long\", \"look\", \"love\", \"man\", \"manage\", \"march\", \"mark\", \"marry\", \"match\", \"mate\", \"matter\", \"measure\", \"meddle\", \"melt\", \"memorise\", \"mend\", \"mess up\", \"milk\", \"mine\", \"miss\", \"mix\", \"moan\", \"moor\", \"mourn\", \"move\", \"muddle\", \"mug\", \"multiply\", \"murder\", \"nail\", \"name\", \"need\", \"nest\", \"nod\", \"note\", \"notice\", \"number\", \"obey\", \"object\", \"observe\", \"obtain\", \"occur\", \"offend\", \"offer\", \"open\", \"order\", \"overflow\", \"owe\", \"own\", \"pack\", \"paddle\", \"paint\", \"park\", \"part\", \"pass\", \"paste\", \"pat\", \"pause\", \"peck\", \"pedal\", \"peel\", \"peep\", \"perform\", \"permit\", \"phone\", \"pick\", \"pinch\", \"pine\", \"place\", \"plan\", \"plant\", \"play\", \"please\", \"plug\", \"point\", \"poke\", \"polish\", \"pop\", \"possess\", \"post\", \"pour\", \"practise\", \"pray\", \"preach\", \"precede\", \"prefer\", \"prepare\", \"present\", \"preserve\", \"press\", \"pretend\", \"prevent\", \"prick\", \"print\", \"produce\", \"program\", \"promise\", \"protect\", \"provide\", \"pull\", \"pump\", \"punch\", \"puncture\", \"punish\", \"push\", \"question\", \"queue\", \"race\", \"radiate\", \"rain\", \"raise\", \"reach\", \"realise\", \"receive\", \"recognise\", \"record\", \"reduce\", \"reflect\", \"refuse\", \"regret\", \"reign\", \"reject\", \"rejoice\", \"relax\", \"release\", \"rely\", \"remain\", \"remember\", \"remind\", \"remove\", \"repair\", \"repeat\", \"replace\", \"reply\", \"report\", \"reproduce\", \"request\", \"rescue\", \"retire\", \"return\", \"rhyme\", \"rinse\", \"risk\", \"rob\", \"rock\", \"roll\", \"rot\", \"rub\", \"ruin\", \"rule\", \"rush\", \"sack\", \"sail\", \"satisfy\", \"save\", \"saw\", \"scare\", \"scatter\", \"scold\", \"scorch\", \"scrape\", \"scratch\", \"scream\", \"screw\", \"scribble\", \"scrub\", \"seal\", \"search\", \"separate\", \"serve\", \"settle\", \"shade\", \"share\", \"shave\", \"shelter\", \"shiver\", \"shock\", \"shop\", \"shrug\", \"sigh\", \"sign\", \"signal\", \"sin\", \"sip\", \"ski\", \"skip\", \"slap\", \"slip\", \"slow\", \"smash\", \"smell\", \"smile\", \"smoke\", \"snatch\", \"sneeze\", \"sniff\", \"snore\", \"snow\", \"soak\", \"soothe\", \"sound\", \"spare\", \"spark\", \"sparkle\", \"spell\", \"spill\", \"spoil\", \"spot\", \"spray\", \"sprout\", \"squash\", \"squeak\", \"squeal\", \"squeeze\", \"stain\", \"stamp\", \"stare\", \"start\", \"stay\", \"steer\", \"step\", \"stir\", \"stitch\", \"stop\", \"store\", \"strap\", \"strengthen\", \"stretch\", \"strip\", \"stroke\", \"stuff\", \"subtract\", \"succeed\", \"suck\", \"suffer\", \"suggest\", \"suit\", \"supply\", \"support\", \"suppose\", \"surprise\", \"surround\", \"suspect\", \"suspend\", \"switch\", \"talk\", \"tame\", \"tap\", \"taste\", \"tease\", \"telephone\", \"tempt\", \"terrify\", \"test\", \"thank\", \"thaw\", \"tick\", \"tickle\", \"tie\", \"time\", \"tip\", \"tire\", \"touch\", \"tour\", \"tow\", \"trace\", \"trade\", \"train\", \"transport\", \"trap\", \"travel\", \"treat\", \"tremble\", \"trick\", \"trip\", \"trot\", \"trouble\", \"trust\", \"try\", \"tug\", \"tumble\", \"turn\", \"twist\", \"type\", \"undress\", \"unfasten\", \"unite\", \"unlock\", \"unpack\", \"untidy\", \"use\", \"vanish\", \"visit\", \"wail\", \"wait\", \"walk\", \"wander\", \"want\", \"warm\", \"warn\", \"wash\", \"waste\", \"watch\", \"water\", \"wave\", \"weigh\", \"welcome\", \"whine\", \"whip\", \"whirl\", \"whisper\", \"whistle\", \"wink\", \"wipe\", \"wish\", \"wobble\", \"wonder\", \"work\", \"worry\", \"wrap\", \"wreck\", \"wrestle\", \"wriggle\", \"x-ray\", \"yawn\", \"yell\", \"zip\", \"zoom\"\r\n\t\t],\r\n\t};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}